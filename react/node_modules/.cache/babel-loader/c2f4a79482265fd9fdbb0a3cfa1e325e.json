{"ast":null,"code":"var _jsxFileName = \"/home/danielm/Desktop/New /Sinatra-backend/react_client/src/components/TodoNewItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoNewItemForm(_ref) {\n  _s();\n\n  let {\n    todoCategories,\n    onNewTodoFormSubmit\n  } = _ref;\n  const [newItemTitle, setNewItemTitle] = useState(\"\");\n  const [newItemCategoryId, setNewItemCategoryId] = useState(\"\");\n  const [newItemUserEmail, setNewItemUserEmail] = useState(\"\");\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const categoriesWithoutAll = todoCategories.filter(category => category !== \"All\");\n  const options = categoriesWithoutAll.map(category => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category,\n      children: category\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleSelectedCategory(event) {\n    setNewItemCategoryId(todoCategories.indexOf(event.target.value));\n  }\n\n  function handleTitleChange(event) {\n    setNewItemTitle(event.target.value);\n  }\n\n  function handleEmailChange(event) {\n    setNewItemUserEmail(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:9292/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: newItemTitle,\n        todo_category_id: newItemCategoryId,\n        email_address: newItemUserEmail,\n        completed: false\n      })\n    }).then(r => r.json()).then(newTodo => {\n      onNewTodoFormSubmit(newTodo);\n      setNewItemTitle(\"\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleTitleChange,\n          value: newItemTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: handleEmailChange,\n          value: newItemUserEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Category: \", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleSelectedCategory,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            disabled: true,\n            hidden: true,\n            children: \"Choose a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), options]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoNewItemForm, \"x++2foluhC3EGdT46I2RUm848Zo=\");\n\n_c = TodoNewItemForm;\nexport default TodoNewItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoNewItemForm\");","map":{"version":3,"sources":["/home/danielm/Desktop/New /Sinatra-backend/react_client/src/components/TodoNewItemForm.js"],"names":["React","useState","useContext","UserContext","TodoNewItemForm","todoCategories","onNewTodoFormSubmit","newItemTitle","setNewItemTitle","newItemCategoryId","setNewItemCategoryId","newItemUserEmail","setNewItemUserEmail","user","setUser","categoriesWithoutAll","filter","category","options","map","handleSelectedCategory","event","indexOf","target","value","handleTitleChange","handleEmailChange","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","title","todo_category_id","email_address","completed","then","r","json","newTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,SAASC,eAAT,OAAiE;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,GAAwC;AAC7D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAACY,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBZ,UAAU,CAACC,WAAD,CAAlC;AAEA,QAAMY,oBAAoB,GAAGV,cAAc,CAACW,MAAf,CAAuBC,QAAD,IAAeA,QAAQ,KAAK,KAAlD,CAA7B;AACA,QAAMC,OAAO,GAAGH,oBAAoB,CAACI,GAArB,CAA0BF,QAAD,IAAc;AACnD,wBACI;AAAuB,MAAA,KAAK,EAAEA,QAA9B;AAAA,gBAAyCA;AAAzC,OAAaA,QAAb;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJe,CAAhB;;AAMA,WAASG,sBAAT,CAAgCC,KAAhC,EAAuC;AACnCX,IAAAA,oBAAoB,CAACL,cAAc,CAACiB,OAAf,CAAuBD,KAAK,CAACE,MAAN,CAAaC,KAApC,CAAD,CAApB;AACH;;AAED,WAASC,iBAAT,CAA2BJ,KAA3B,EAAkC;AAC9Bb,IAAAA,eAAe,CAACa,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAf;AACH;;AAED,WAASE,iBAAT,CAA2BL,KAA3B,EAAkC;AAC9BT,IAAAA,mBAAmB,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAnB;AACH;;AAED,WAASG,YAAT,CAAsBN,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACO,cAAN;AAEAC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFwB;AAKjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAE5B,YADY;AAEnB6B,QAAAA,gBAAgB,EAAE3B,iBAFC;AAGnB4B,QAAAA,aAAa,EAAE1B,gBAHI;AAInB2B,QAAAA,SAAS,EAAE;AAJQ,OAAf;AAL2B,KAAhC,CAAL,CAYKC,IAZL,CAYWC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAZjB,EAaKF,IAbL,CAaWG,OAAD,IAAa;AACfpC,MAAAA,mBAAmB,CAACoC,OAAD,CAAnB;AACAlC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH,KAhBL;AAkBH;;AAED,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEmB,YAAhB;AAA8B,MAAA,SAAS,EAAC,eAAxC;AAAA,8BACI;AAAA,2CACW;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEF,iBAA7B;AAAgD,UAAA,KAAK,EAAElB;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,2CACW;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,QAAQ,EAAEmB,iBAA9B;AAAiD,UAAA,KAAK,EAAEf;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOQ;AAAA,+CAAkB;AAAQ,UAAA,QAAQ,EAAES,sBAAlB;AAAA,kCAClB;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,QAAQ,MAAzB;AAA0B,YAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADkB,EAETF,OAFS;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPR,eAYI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GApEQd,e;;KAAAA,e;AAsET,eAAeA,eAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport { UserContext } from \"./UserContext\";\n\nfunction TodoNewItemForm({ todoCategories, onNewTodoFormSubmit}) {\n    const [newItemTitle, setNewItemTitle] = useState(\"\")\n    const [newItemCategoryId, setNewItemCategoryId] = useState(\"\")\n    const [newItemUserEmail, setNewItemUserEmail] = useState(\"\")\n    const {user, setUser} = useContext(UserContext);\n\n    const categoriesWithoutAll = todoCategories.filter((category) => (category !== \"All\"))\n    const options = categoriesWithoutAll.map((category) => {\n        return (\n            <option key={category} value={category}>{category}</option>\n          )\n    })\n\n    function handleSelectedCategory(event) {\n        setNewItemCategoryId(todoCategories.indexOf(event.target.value))\n    }\n\n    function handleTitleChange(event) {\n        setNewItemTitle(event.target.value)\n    }\n\n    function handleEmailChange(event) {\n        setNewItemUserEmail(event.target.value)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        fetch(\"http://localhost:9292/todos\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              title: newItemTitle,\n              todo_category_id: newItemCategoryId,\n              email_address: newItemUserEmail,\n              completed: false\n            }),\n          })\n            .then((r) => r.json())\n            .then((newTodo) => {\n                onNewTodoFormSubmit(newTodo);\n                setNewItemTitle(\"\");\n            });\n           \n    }\n   \n    return (\n        <div>\n        <form onSubmit={handleSubmit} className=\"new-todo-form\">\n            <label>\n                Title: <input type=\"text\" onChange={handleTitleChange} value={newItemTitle}></input>\n            </label>\n            <label>\n                Email: <input type=\"email\" onChange={handleEmailChange} value={newItemUserEmail}></input>\n            </label>\n                <label> Category: <select onChange={handleSelectedCategory}>\n                <option selected disabled hidden>Choose a Category</option>\n                        {options}\n                    </select>\n                </label>\n            <input type=\"submit\" value=\"Add Todo\"></input>\n        </form>\n       \n        </div>\n    )\n    \n}\n\nexport default TodoNewItemForm;"]},"metadata":{},"sourceType":"module"}