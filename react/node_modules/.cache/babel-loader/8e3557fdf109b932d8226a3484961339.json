{"ast":null,"code":"var _jsxFileName = \"/home/danielm/Desktop/New /Sinatra-backend/react_client/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useContext } from \"react\";\nimport './App.css';\nimport NavBar from \"./NavBar\";\nimport TodoApplication from './TodoApplication';\nimport ShoppingApplication from \"./ShoppingApplication\";\nimport Home from \"./Home\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({\n    username: \"\",\n    email_address: \"\",\n    id: \"\",\n    budget: \"\"\n  });\n  const providerValue = useMemo(() => ({\n    user,\n    setUser\n  }), [user, setUser]);\n  const [error, setError] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  async function login(details) {\n    await fetch(\"http://localhost:9292/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(details)\n    }).then(r => {\n      if (r.status === 200) {\n        r.json().then(data => setUser({\n          username: data.username,\n          email_address: data.email_address,\n          id: data.id,\n          budget: data.budget,\n          todos: data\n        }));\n      } else {\n        setUser({\n          username: \"\",\n          email_address: \"\",\n          id: \"\",\n          budget: \"\"\n        });\n      }\n    });\n  }\n\n  function logout() {\n    setUser({\n      username: \"\",\n      email_address: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: providerValue,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List Metaverse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todo-list\",\n          children: /*#__PURE__*/_jsxDEV(TodoApplication, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shopping-list\",\n          children: /*#__PURE__*/_jsxDEV(ShoppingApplication, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            error: error,\n            login: login,\n            logout: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6/TTHsUnYid537TOVXOgaW6Ita4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danielm/Desktop/New /Sinatra-backend/react_client/src/components/App.js"],"names":["React","useState","useMemo","useContext","NavBar","TodoApplication","ShoppingApplication","Home","Route","Switch","UserContext","App","user","setUser","username","email_address","id","budget","providerValue","error","setError","errorMessage","setErrorMessage","login","details","fetch","method","headers","body","JSON","stringify","then","r","status","json","data","todos","logout"],"mappings":"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","sourcesContent":["import React, {useState, useMemo, useContext} from \"react\";\nimport './App.css';\nimport NavBar from \"./NavBar\";\nimport TodoApplication from './TodoApplication';\nimport ShoppingApplication from \"./ShoppingApplication\";\nimport Home from \"./Home\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport {UserContext} from './UserContext'\n\n\n\n\n\nfunction App() {\n\n\n  const [user, setUser] = useState({\n      username: \"\",\n      email_address: \"\",\n      id: \"\",\n      budget: \"\"\n    })\n  const providerValue = useMemo(()=>({user, setUser}), [user, setUser])\n\n  const [error, setError] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(\"\")\n\n\n  async function login(details) {\n    await fetch(\"http://localhost:9292/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(details)\n    })\n      .then((r) => {\n        \n        if (r.status === 200) {\n          r.json().then((data) => \n          setUser({\n            username: data.username,\n            email_address: data.email_address,\n            id: data.id,\n            budget: data.budget,\n            todos: data\n          })\n          \n      )} else {\n        setUser({\n          username: \"\",\n          email_address: \"\",\n          id: \"\",\n          budget: \"\"\n        })\n      }\n    }) \n  }\n\n  function logout(){\n    setUser({\n      username: \"\",\n      email_address: \"\"});}\n\n     \n\n  return (\n    <div className=\"App\">\n    <UserContext.Provider value={providerValue}>\n  \n      <h1>List Metaverse</h1>\n      <NavBar />\n       <Switch>\n          <Route path=\"/todo-list\">\n            <TodoApplication />\n          </Route>\n\n          <Route path=\"/shopping-list\">\n            <ShoppingApplication/>\n          </Route>\n\n          <Route path=\"/\">\n            <Home error={error} login={login} logout={logout}/>\n          </Route>\n      </Switch>\n\n    </UserContext.Provider>\n    </div>\n    \n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}